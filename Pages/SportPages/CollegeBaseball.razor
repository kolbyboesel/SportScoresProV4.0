@page "/CollegeBaseball"
@inject IJSRuntime JSRuntime
@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager

<PageTitle>College Baseball</PageTitle>
<style>
  .navDivider {
    display: none !important;
  }
</style>
<div class="headerImage mobileSetting"><img class="height-6vh" src="/images/ncaaLogo.png"></div>
<!-- NAVBAR -->
<header class="site-navbar mt-3" style="top:1rem!important">
  <div class="container-fluid">
    <div class="row align-items-center">
      <div class="site-logo col-6" style="width: 40%;"></div>

      <nav class="mx-auto site-navigation sport-specific-dropdown center-elements">
        <ul class="site-menu js-clone-nav d-none d-xl-block ml-0 pl-0">
            <a class="nav-link active"><img src="/images/ncaaLogo.png" style="height: 6vh;"></a>
        </ul>
      </nav>
    </div>
  </div>
</header>

<div class="container no-gutters align-flex-start">
  <div class="row no-gutters responsiveSearchContainer">
    <div id="CBaseballSearch" class="container date-search-container pt-0 mlbSearch">
      <div class="row width-100">
        <div class="col-4 margin-auto center-elements">
          <EditForm id="mlbScoreSearch" Model="@currentSearch" OnValidSubmit="searchScores">
            <div class="container no-gutters">
              <div class="row width-100">
                <div class="col-8 center-elements no-gutters">
                  <InputDate class="btn date-search" @bind-Value="currentSearch.selectedDate" style="overflow: hidden; border-bottom-right-radius: 0px;border-top-right-radius: 0px"/>
                </div>
                <div class="col-4 center-elements no-gutters">
                  <button type="submit" class="btn search-btn" style="border-radius:5px; border-bottom-left-radius: 0px;border-top-left-radius: 0px"><i class="fa fa-search"></i></button>
                </div>
              </div>
            </div>
          </EditForm>
        </div>
        <div class="col-4 margin-auto center-elements">
          <a type="button" onclick="showCollegeBaseballOdds()" href="" class="btn search-btn no-gutters" style="border-radius:5px">Betting Odds</a>
        </div>
        <div class="col-4 margin-auto center-elements" style="display: none;">
          <a type="button" @onclick=showStandings href="" class="btn search-btn" style="border-radius:5px">Standings</a>
        </div>
      </div>
    </div>
  </div>
  <div class="loading cbaseballLoading" style="display: none;">Loading&#8230;</div>

  <div class="row no-gutters indexContainerPad xs-padding overflow-auto containerCBaseball">
    <div class="page-text">Choose an Option Above To Search For Scores or Betting Odds by Date</div>
  </div>
</div>

@code {

public class DateSearchModel
  {
    public DateTime selectedDate { get; set; }

  }
  private DateSearchModel currentSearch = new DateSearchModel();

public async Task searchScores(){
    var userDate = currentSearch.selectedDate;
    var stringYear = userDate.Year.ToString();
    var month = userDate.Month;
    var day = userDate.Day;
    var stringMonth = "";
    var stringDay = "";
    if(month < 10){
      stringMonth = "0" + month;
    } else {
      stringMonth = month.ToString();
    }
    if(day < 10){
      stringDay = "0" + day;
    } else {
      stringDay = day.ToString();
    }
    var stringDate =  stringYear + "-" + stringMonth + "-" + stringDay;
    await JSRuntime.InvokeVoidAsync("loadScoreboard", "N", 64,"NCAA, Regular Season","containerCBaseball", "cbaseballLoading", "null", stringDate);
  }
  public async Task showStandings()
  {
    await JSRuntime.InvokeVoidAsync("showStandings", "tid", "sid", "containerCBaseball", "cbaseballLoading");
  }
  string cookieValue = "";
  protected override async Task OnInitializedAsync()
  {
        currentSearch.selectedDate = DateTime.Now;
        cookieValue = HttpContextAccessor.HttpContext.Request.Cookies["loggedInStatus"];
  }
  private string innerHtmlValue = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        innerHtmlValue = "";
    }


    public async Task showSignupModal()
    {
    await JSRuntime.InvokeVoidAsync("cookieInterop.setCookie", "showSignupModal", "true", null, null, null, null);
    NavigationManager.NavigateTo("/",forceLoad:true);
    }

  public async Task renderLogin()
  {
    await JSRuntime.InvokeVoidAsync("cookieInterop.setCookie", "showLogin", "true", null, null, null, null);
    NavigationManager.NavigateTo("/",forceLoad:true);
  }

  public async Task renderAccount()
  {
    await JSRuntime.InvokeVoidAsync("cookieInterop.setCookie", "showAccount", "true", null, null, null, null);
    NavigationManager.NavigateTo("/",forceLoad:true);
  }

  public async Task renderBettingOdds()
  {
    await JSRuntime.InvokeVoidAsync("cookieInterop.setCookie", "showBettingOdds", "true", null, null, null, null);
    NavigationManager.NavigateTo("/",forceLoad:true);
  }
  public async Task renderLiveScores()
  {
    await JSRuntime.InvokeVoidAsync("cookieInterop.setCookie", "showLiveScores", "true", null, null, null, null);
    NavigationManager.NavigateTo("/",forceLoad:true);
  }
  public async Task renderHome()
  {
    await JSRuntime.InvokeVoidAsync("cookieInterop.setCookie", "showHome", "true", null, null, null, null);
    NavigationManager.NavigateTo("/",forceLoad:true);
  }
}